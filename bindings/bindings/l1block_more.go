// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bindings

import (
	"encoding/json"

	"github.com/kroma-network/kroma/bindings/solc"
)

const L1BlockStorageLayoutJSON = "{\"storage\":[{\"astId\":1000,\"contract\":\"contracts/L2/L1Block.sol:L1Block\",\"label\":\"number\",\"offset\":0,\"slot\":\"0\",\"type\":\"t_uint64\"},{\"astId\":1001,\"contract\":\"contracts/L2/L1Block.sol:L1Block\",\"label\":\"timestamp\",\"offset\":8,\"slot\":\"0\",\"type\":\"t_uint64\"},{\"astId\":1002,\"contract\":\"contracts/L2/L1Block.sol:L1Block\",\"label\":\"basefee\",\"offset\":0,\"slot\":\"1\",\"type\":\"t_uint256\"},{\"astId\":1003,\"contract\":\"contracts/L2/L1Block.sol:L1Block\",\"label\":\"hash\",\"offset\":0,\"slot\":\"2\",\"type\":\"t_bytes32\"},{\"astId\":1004,\"contract\":\"contracts/L2/L1Block.sol:L1Block\",\"label\":\"sequenceNumber\",\"offset\":0,\"slot\":\"3\",\"type\":\"t_uint64\"},{\"astId\":1005,\"contract\":\"contracts/L2/L1Block.sol:L1Block\",\"label\":\"batcherHash\",\"offset\":0,\"slot\":\"4\",\"type\":\"t_bytes32\"},{\"astId\":1006,\"contract\":\"contracts/L2/L1Block.sol:L1Block\",\"label\":\"l1FeeOverhead\",\"offset\":0,\"slot\":\"5\",\"type\":\"t_uint256\"},{\"astId\":1007,\"contract\":\"contracts/L2/L1Block.sol:L1Block\",\"label\":\"l1FeeScalar\",\"offset\":0,\"slot\":\"6\",\"type\":\"t_uint256\"},{\"astId\":1008,\"contract\":\"contracts/L2/L1Block.sol:L1Block\",\"label\":\"validatorRewardScalar\",\"offset\":0,\"slot\":\"7\",\"type\":\"t_uint256\"}],\"types\":{\"t_bytes32\":{\"encoding\":\"inplace\",\"label\":\"bytes32\",\"numberOfBytes\":\"32\"},\"t_uint256\":{\"encoding\":\"inplace\",\"label\":\"uint256\",\"numberOfBytes\":\"32\"},\"t_uint64\":{\"encoding\":\"inplace\",\"label\":\"uint64\",\"numberOfBytes\":\"8\"}}}"

var L1BlockStorageLayout = new(solc.StorageLayout)

var L1BlockDeployedBin = "0x608060405234801561001057600080fd5b50600436106100d45760003560e01c80639e8c496611610081578063e81b2c6d1161005b578063e81b2c6d146101c6578063ed579ad3146101cf578063efc674eb146101d857600080fd5b80639e8c49661461015d578063b80777ea14610166578063e591b2821461018657600080fd5b806364ca23ef116100b257806364ca23ef146101135780638381f58a146101405780638b239f731461015457600080fd5b806309bd5a60146100d957806354fd4d50146100f55780635cf249691461010a575b600080fd5b6100e260025481565b6040519081526020015b60405180910390f35b6100fd6101ed565b6040516100ec91906105fe565b6100e260015481565b6003546101279067ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020016100ec565b6000546101279067ffffffffffffffff1681565b6100e260055481565b6100e260065481565b6000546101279068010000000000000000900467ffffffffffffffff1681565b6101a173deaddeaddeaddeaddeaddeaddeaddeaddead000181565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ec565b6100e260045481565b6100e260075481565b6101eb6101e636600461066c565b610290565b005b60606102187f0000000000000000000000000000000000000000000000000000000000000000610491565b6102417f0000000000000000000000000000000000000000000000000000000000000000610491565b61026a7f0000000000000000000000000000000000000000000000000000000000000000610491565b60405160200161027c939291906106e8565b604051602081830303815290604052905090565b3373deaddeaddeaddeaddeaddeaddeaddeaddead000114610338576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f4c31426c6f636b3a206f6e6c7920746865206465706f7369746f72206163636f60448201527f756e742063616e20736574204c3120626c6f636b2076616c756573000000000060648201526084015b60405180910390fd5b6127108111156103f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604360248201527f4c31426c6f636b3a20746865206d61782076616c7565206f662076616c69646160448201527f746f7220726577617264207363616c617220686173206265656e20657863656560648201527f6465640000000000000000000000000000000000000000000000000000000000608482015260a40161032f565b6000805467ffffffffffffffff998a1668010000000000000000027fffffffffffffffffffffffffffffffff000000000000000000000000000000009091169a8a169a909a179990991790985560019590955560029390935560038054929095167fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000009290921691909117909355600492909255600591909155600655600755565b6060816000036104d457505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b81156104fe57806104e88161078d565b91506104f79050600a836107f4565b91506104d8565b60008167ffffffffffffffff81111561051957610519610808565b6040519080825280601f01601f191660200182016040528015610543576020820181803683370190505b5090505b84156105c657610558600183610837565b9150610565600a8661084e565b610570906030610862565b60f81b8183815181106105855761058561087a565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506105bf600a866107f4565b9450610547565b949350505050565b60005b838110156105e95781810151838201526020016105d1565b838111156105f8576000848401525b50505050565b602081526000825180602084015261061d8160408501602087016105ce565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b803567ffffffffffffffff8116811461066757600080fd5b919050565b60008060008060008060008060006101208a8c03121561068b57600080fd5b6106948a61064f565b98506106a260208b0161064f565b975060408a0135965060608a013595506106be60808b0161064f565b989b979a50959894979660a0860135965060c08601359560e0810135955061010001359350915050565b600084516106fa8184602089016105ce565b80830190507f2e000000000000000000000000000000000000000000000000000000000000008082528551610736816001850160208a016105ce565b600192019182015283516107518160028401602088016105ce565b0160020195945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036107be576107be61075e565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082610803576108036107c5565b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000828210156108495761084961075e565b500390565b60008261085d5761085d6107c5565b500690565b600082198211156108755761087561075e565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea164736f6c634300080f000a"

func init() {
	if err := json.Unmarshal([]byte(L1BlockStorageLayoutJSON), L1BlockStorageLayout); err != nil {
		panic(err)
	}

	layouts["L1Block"] = L1BlockStorageLayout
	deployedBytecodes["L1Block"] = L1BlockDeployedBin
}
