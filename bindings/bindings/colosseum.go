// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bindings

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// ColosseumMetaData contains all meta data concerning the Colosseum contract.
var ColosseumMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"contractL2OutputOracle\",\"name\":\"_l2Oracle\",\"type\":\"address\"},{\"internalType\":\"contractZKVerifier\",\"name\":\"_zkVerifier\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_submissionInterval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bisectionTimeout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_provingTimeout\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_dummyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_maxTxs\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_segmentsLengths\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"_securityCouncil\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"outputIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"outputIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"turn\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Bisected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"outputIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"challenger\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ChallengeCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"outputIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Deleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"outputIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newOutputRoot\",\"type\":\"bytes32\"}],\"name\":\"Proven\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BISECTION_TIMEOUT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DUMMY_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"L2_ORACLE\",\"outputs\":[{\"internalType\":\"contractL2OutputOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"L2_ORACLE_SUBMISSION_INTERVAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TXS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROVING_TIMEOUT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SECURITY_COUNCIL\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZK_VERIFIER\",\"outputs\":[{\"internalType\":\"contractZKVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_outputIndex\",\"type\":\"uint256\"}],\"name\":\"approveChallenge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_outputIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_pos\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"_segments\",\"type\":\"bytes32[]\"}],\"name\":\"bisect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_outputIndex\",\"type\":\"uint256\"}],\"name\":\"challengerTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"challenges\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"turn\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"timeoutAt\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"challenger\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"segSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"segStart\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"outputRoot\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_outputIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"_segments\",\"type\":\"bytes32[]\"}],\"name\":\"createChallenge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_outputIndex\",\"type\":\"uint256\"}],\"name\":\"getChallenge\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"turn\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"timeoutAt\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"challenger\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"segments\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"segSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"segStart\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"outputRoot\",\"type\":\"bytes32\"}],\"internalType\":\"structTypes.Challenge\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_turn\",\"type\":\"uint8\"}],\"name\":\"getSegmentsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_outputIndex\",\"type\":\"uint256\"}],\"name\":\"getStatus\",\"outputs\":[{\"internalType\":\"enumColosseum.ChallengeStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_segmentsLengths\",\"type\":\"uint256[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_outputIndex\",\"type\":\"uint256\"}],\"name\":\"isAbleToBisect\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_outputIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isChallengeRelated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_outputIndex\",\"type\":\"uint256\"}],\"name\":\"isInProgress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_outputIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_outputRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_pos\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"version\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"messagePasserStorageRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"nextBlockHash\",\"type\":\"bytes32\"}],\"internalType\":\"structTypes.OutputRootProof\",\"name\":\"_srcOutputRootProof\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"version\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"messagePasserStorageRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"nextBlockHash\",\"type\":\"bytes32\"}],\"internalType\":\"structTypes.OutputRootProof\",\"name\":\"_dstOutputRootProof\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parentHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"number\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseFee\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"transactionsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"withdrawalsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"txHashes\",\"type\":\"bytes32[]\"}],\"internalType\":\"structTypes.PublicInput\",\"name\":\"_publicInput\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"uncleHash\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"coinbase\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"receiptsRoot\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"logsBloom\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"difficulty\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"gasUsed\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"mixHash\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"nonce\",\"type\":\"bytes\"}],\"internalType\":\"structTypes.BlockHeaderRLP\",\"name\":\"_rlps\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"_proof\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_pair\",\"type\":\"uint256[]\"}],\"name\":\"proveFault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"verifiedPublicInputs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x6101e06040523480156200001257600080fd5b50604051620033e9380380620033e9833981016040819052620000359162000386565b60006080819052600160a05260c0526001600160a01b03808a1660e052888116610100526101208790526101408690526101608890526101808590526101a084905281166101c052620000888262000097565b5050505050505050506200054e565b600054610100900460ff1615808015620000b85750600054600160ff909116105b80620000e85750620000d530620001cb60201b620019791760201c565b158015620000e8575060005460ff166001145b620001515760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801562000175576000805461ff0019166101001790555b6200018082620001da565b8015620001c7576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6001600160a01b03163b151590565b60028151620001ea9190620004c3565b156200025f5760405162461bcd60e51b815260206004820152603b60248201527f436f6c6f737365756d3a206c656e677468206f66207365676d656e7473206c6560448201527f6e677468732063616e6e6f74206265206f6464206e756d6265722e0000000000606482015260840162000148565b600160005b8251811015620002e457828181518110620002835762000283620004e6565b602002602001015160016000838152602001908152602001600020819055506001838281518110620002b957620002b9620004e6565b6020026020010151620002cd919062000512565b620002d990836200052c565b915060010162000264565b50610160518114620001c75760405162461bcd60e51b815260206004820152602360248201527f436f6c6f737365756d3a20696e76616c6964207365676d656e7473206c656e6760448201526274687360e81b606482015260840162000148565b6001600160a01b03811681146200035b57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b8051620003818162000345565b919050565b60008060008060008060008060006101208a8c031215620003a657600080fd5b8951620003b38162000345565b60208b0151909950620003c68162000345565b8098505060408a0151965060608a0151955060808a0151945060a08a0151935060c08a0151925060e08a015160018060401b03808211156200040757600080fd5b818c0191508c601f8301126200041c57600080fd5b8151818111156200043157620004316200035e565b8060051b604051601f19603f830116810181811085821117156200045957620004596200035e565b6040529182526020808301935084820101918f8311156200047957600080fd5b6020850194505b828510156200049d57845184526020948501949093019262000480565b8096505050505050620004b46101008b0162000374565b90509295985092959850929598565b600082620004e157634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082821015620005275762000527620004fc565b500390565b6000816000190483118215151615620005495762000549620004fc565b500290565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c051612dce6200061b6000396000818161027301528181610a4101526118a7015260006102cf015260006105000152600081816104b2015261216a0152600081816104d901528181611ed10152611ff201526000818161029a0152611f380152600061047801526000818161019601528181610bd401528181611011015281816111c0015261129b0152600061076e015260006107450152600061071c0152612dce6000f3fe608060405234801561001057600080fd5b506004361061018c5760003560e01c8063572419a0116100e35780639ded39521161008c578063d2ee307511610066578063d2ee3075146104d4578063d5145ebc146104fb578063df7bcdab1461052257600080fd5b80639ded395214610473578063b8b1a27c1461049a578063cfb4474d146104ad57600080fd5b80636fe0e559116100bd5780636fe0e559146103615780637ecc14be146103745780638f1d37761461038757600080fd5b8063572419a01461031b578063586b74141461032e5780635c622a0e1461034157600080fd5b806329204bc8116101455780635375b8911161011f5780635375b891146102ca57806354fd4d50146102f1578063571332781461030657600080fd5b806329204bc81461025b578063360864171461026e5780634394c5841461029557600080fd5b80631728fad1116101765780631728fad1146102055780631bdd4b74146102185780631be4e27e1461023857600080fd5b80621c2ff6146101915780630d304c08146101e2575b600080fd5b6101b87f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6101f56101f03660046123ed565b610535565b60405190151581526020016101d9565b6101f56102133660046123ed565b610553565b61022b6102263660046123ed565b61056a565b6040516101d99190612441565b6101f56102463660046123ed565b60036020526000908152604090205460ff1681565b6101f561026936600461252f565b6106ad565b6101b87f000000000000000000000000000000000000000000000000000000000000000081565b6102bc7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016101d9565b6102bc7f000000000000000000000000000000000000000000000000000000000000000081565b6102f9610715565b6040516101d991906125d9565b610319610314366004612638565b6107b8565b005b6103196103293660046123ed565b610953565b61031961033c3660046123ed565b610a29565b61035461034f3660046123ed565b610d28565b6040516101d991906126ba565b61031961036f366004612779565b610d3f565b61031961038236600461281f565b610eb9565b61040e6103953660046123ed565b6002602052600090815260409020805460018201546003830154600484015460059094015460ff8085169567ffffffffffffffff61010087041695690100000000000000000081049092169473ffffffffffffffffffffffffffffffffffffffff6a010000000000000000000090930483169492169288565b6040805160ff909916895267ffffffffffffffff90971660208901529415159587019590955273ffffffffffffffffffffffffffffffffffffffff92831660608701529116608085015260a084015260c083019190915260e0820152610100016101d9565b6101b87f000000000000000000000000000000000000000000000000000000000000000081565b6102bc6104a836600461286b565b611503565b6102bc7f000000000000000000000000000000000000000000000000000000000000000081565b6102bc7f000000000000000000000000000000000000000000000000000000000000000081565b6102bc7f000000000000000000000000000000000000000000000000000000000000000081565b6103196105303660046128cc565b611580565b600081815260026020526040812061054c81611995565b9392505050565b600081815260026020526040812061054c816119a9565b604080516101208101825260008082526020820181905291810182905260608082018390526080820183905260a082015260c0810182905260e08101829052610100810191909152600082815260026020818152604092839020835161012081018552815460ff808216835267ffffffffffffffff61010083041683860152690100000000000000000082041615158287015273ffffffffffffffffffffffffffffffffffffffff6a010000000000000000000090910481166060830152600183015416608082015292810180548551818502810185019096528086529394919360a086019383018282801561067f57602002820191906000526020600020905b81548152602001906001019080831161066b575b5050505050815260200160038201548152602001600482015481526020016005820154815250509050919050565b6000828152600260205260408120805473ffffffffffffffffffffffffffffffffffffffff8481166a010000000000000000000090920416148061070d5750600181015473ffffffffffffffffffffffffffffffffffffffff8481169116145b949350505050565b60606107407f00000000000000000000000000000000000000000000000000000000000000006119f1565b6107697f00000000000000000000000000000000000000000000000000000000000000006119f1565b6107927f00000000000000000000000000000000000000000000000000000000000000006119f1565b6040516020016107a4939291906129d6565b604051602081830303815290604052905090565b60008481526002602052604090206107cf81611b26565b80546000906107e29060ff166001612a7b565b905061086d818360020187815481106107fd576107fd612aa0565b9060005260206000200154846002018860016108199190612acf565b8154811061082957610829612aa0565b9060005260206000200154878780806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611cbc92505050565b600061087883611e69565b905060006108868288612ae7565b84600401546108959190612acf565b90506108d884878780806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250869250879150611e959050565b83547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff841617845561090c84611ebf565b6040805160ff8516815242602082015289917fa2bae20ceacd256f82b17383dce1a4ae47160249716414a902f45a7f234e8302910160405180910390a25050505050505050565b600081815260026020526040902061096a81611b26565b6000828152600260208190526040822080547fffff0000000000000000000000000000000000000000000000000000000000001681556001810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905591906109d89083018261236f565b506000600382018190556004820181905560059091015560405142815282907fe8f652f9f21a63a0e34171413bdc9d92cd79d0bb8bc66f3c92efedf25a3e32db906020015b60405180910390a25050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610ad95760405162461bcd60e51b815260206004820152602d60248201527f436f6c6f737365756d3a2073656e646572206973206e6f74207468652073656360448201527f757269747920636f756e63696c0000000000000000000000000000000000000060648201526084015b60405180910390fd5b60008181526002602052604090206006610af282611f60565b6007811115610b0357610b0361268b565b14610b765760405162461bcd60e51b815260206004820152602760248201527f436f6c6f737365756d3a2074686973206368616c6c656e6765206973206e6f7460448201527f2070726f76656e000000000000000000000000000000000000000000000000006064820152608401610ad0565b600581015460018201546040517fe664672300000000000000000000000000000000000000000000000000000000815260048101859052602481019290925273ffffffffffffffffffffffffffffffffffffffff90811660448301527f0000000000000000000000000000000000000000000000000000000000000000169063e664672390606401600060405180830381600087803b158015610c1857600080fd5b505af1158015610c2c573d6000803e3d6000fd5b5050506000838152600260208190526040822080547fffff0000000000000000000000000000000000000000000000000000000000001681556001810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690559250610c9d9083018261236f565b50600060038201819055600482018190556005909101819055828152600260205260409081902080547fffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffff1669010000000000000000001790555182907f1527ad5e6cfbfe249bfd6f9571cbfee0ce4a12335089fa9c6efeab04fec1f7a390610a1d9042815260200190565b600081815260026020526040812061054c81611f60565b600054610100900460ff1615808015610d5f5750600054600160ff909116105b80610d795750303b158015610d79575060005460ff166001145b610deb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610ad0565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610e4957600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610e528261206d565b8015610eb557600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b60008311610f2f5760405162461bcd60e51b815260206004820152603660248201527f436f6c6f737365756d3a206368616c6c656e676520666f722067656e6573697360448201527f206f7574707574206973206e6f7420616c6c6f776564000000000000000000006064820152608401610ad0565b6000838152600260205260409020610f46816119a9565b15610fdf5760405162461bcd60e51b815260206004820152605360248201527f436f6c6f737365756d3a20746865206368616c6c656e676520666f722067697660448201527f656e206f757470757420696e64657820697320616c726561647920696e20707260648201527f6f6772657373206f7220617070726f7665642e00000000000000000000000000608482015260a401610ad0565b6040517fa25ae557000000000000000000000000000000000000000000000000000000008152600481018590526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063a25ae55790602401608060405180830381865afa15801561106d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110919190612b44565b905080606001516fffffffffffffffffffffffffffffffff166000036110f95760405162461bcd60e51b815260206004820152601b60248201527f436f6c6f737365756d3a206f7574707574206e6f7420666f756e6400000000006044820152606401610ad0565b805173ffffffffffffffffffffffffffffffffffffffff1633036111855760405162461bcd60e51b815260206004820152603860248201527f436f6c6f737365756d3a2074686520617373657274657220616e64206368616c60448201527f6c656e676572206d75737420626520646966666572656e7400000000000000006064820152608401610ad0565b60408051608081018252600080825260208201819052918101829052606081019190915273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001663a25ae5576111f0600189612bbc565b6040518263ffffffff1660e01b815260040161120e91815260200190565b608060405180830381865afa15801561122b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124f9190612b44565b9050611299600182602001518460200151888880806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611cbc92505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b98debbf6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611304573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113289190612bd3565b6040517fda3893f00000000000000000000000000000000000000000000000000000000081523360048201526024810188905273ffffffffffffffffffffffffffffffffffffffff919091169063da3893f090604401600060405180830381600087803b15801561139857600080fd5b505af11580156113ac573d6000803e3d6000fd5b5050505061142583868680806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250505050606084810151908601516fffffffffffffffffffffffffffffffff82169161140e91612bf0565b6fffffffffffffffffffffffffffffffff16611e95565b8254825173ffffffffffffffffffffffffffffffffffffffff166a0100000000000000000000027fffff0000000000000000000000000000000000000000ffffffffffffffffff009091161760019081178455830180547fffffffffffffffffffffffff000000000000000000000000000000000000000016331790556114ab83611ebf565b8151604051428152339173ffffffffffffffffffffffffffffffffffffffff169088907fd2f7931a802085b3d0234d4c320ce7ee0041da96678ce2bf5c93e8d3d7e65f529060200160405180910390a4505050505050565b6000600160ff831610156115595760405162461bcd60e51b815260206004820152601760248201527f436f6c6f737365756d3a20696e76616c6964207475726e0000000000000000006044820152606401610ad0565b600160006115678285612c21565b60ff168152602001908152602001600020549050919050565b60008b815260026020526040902061159781611b26565b60006115b06115ab368c90038c018c612c44565b6121fd565b905060006115c66115ab368c90038c018c612c44565b90506115d183611995565b6117075781836002018d815481106115eb576115eb612aa0565b9060005260206000200154146116695760405162461bcd60e51b815260206004820152602d60248201527f436f6c6f737365756d3a2074686520736f75726365207365676d656e74206d7560448201527f7374206265206d617463686564000000000000000000000000000000000000006064820152608401610ad0565b80600284016116798e6001612acf565b8154811061168957611689612aa0565b9060005260206000200154036117075760405162461bcd60e51b815260206004820152603660248201527f436f6c6f737365756d3a207468652064657374696e6174696f6e207365676d6560448201527f6e74206d757374206e6f74206265206d617463686564000000000000000000006064820152608401610ad0565b89606001358b60800135146117845760405162461bcd60e51b815260206004820152602960248201527f436f6c6f737365756d3a2074686520626c6f636b2068617368206d757374206260448201527f65206d61746368656400000000000000000000000000000000000000000000006064820152608401610ad0565b89602001358960e00135146118015760405162461bcd60e51b815260206004820152602960248201527f436f6c6f737365756d3a2074686520737461746520726f6f74206d757374206260448201527f65206d61746368656400000000000000000000000000000000000000000000006064820152608401610ad0565b600583018d9055604051602481018f9052600090604401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f586b741400000000000000000000000000000000000000000000000000000000179052905073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001663b46bd8858f6118dd60808e0160608f01612cb4565b846040518463ffffffff1660e01b81526004016118fc93929190612cde565b600060405180830381600087803b15801561191657600080fd5b505af115801561192a573d6000803e3d6000fd5b505050508e7fc2abee209438b2b732f3df51f48b7cc99f73c9965f06680549f28f36a2dc24478f60405161196091815260200190565b60405180910390a2505050505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b600060016119a283611e69565b1192915050565b6000806119b583611f60565b905060008160078111156119cb576119cb61268b565b1415801561054c575060038160078111156119e8576119e861268b565b14159392505050565b606081600003611a3457505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115611a5e5780611a4881612d10565b9150611a579050600a83612d77565b9150611a38565b60008167ffffffffffffffff811115611a7957611a796126fb565b6040519080825280601f01601f191660200182016040528015611aa3576020820181803683370190505b5090505b841561070d57611ab8600183612bbc565b9150611ac5600a86612d8b565b611ad0906030612acf565b60f81b818381518110611ae557611ae5612aa0565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611b1f600a86612d77565b9450611aa7565b6000611b3182611f60565b905060006001826007811115611b4957611b4961268b565b1480611b6657506005826007811115611b6457611b6461268b565b145b80611b8257506004826007811115611b8057611b8061268b565b145b15611ba85750600182015473ffffffffffffffffffffffffffffffffffffffff16611c52565b6002826007811115611bbc57611bbc61268b565b1480611bd957506003826007811115611bd757611bd761268b565b145b15611c0a575081546a0100000000000000000000900473ffffffffffffffffffffffffffffffffffffffff16611c52565b60405162461bcd60e51b815260206004820152601e60248201527f436f6c6f737365756d3a20756e61626c6520746f2062652063616c6c656400006044820152606401610ad0565b73ffffffffffffffffffffffffffffffffffffffff81163314611cb75760405162461bcd60e51b815260206004820152601860248201527f436f6c6f737365756d3a206e6f7420796f7572207475726e00000000000000006044820152606401610ad0565b505050565b805180611cc886611503565b14611d3b5760405162461bcd60e51b815260206004820152602260248201527f436f6c6f737365756d3a20696e76616c6964207365676d656e7473206c656e6760448201527f74680000000000000000000000000000000000000000000000000000000000006064820152608401610ad0565b81600081518110611d4e57611d4e612aa0565b60200260200101518414611dca5760405162461bcd60e51b815260206004820152602c60248201527f436f6c6f737365756d3a20746865206669727374207365676d656e74206d757360448201527f74206265206d61746368656400000000000000000000000000000000000000006064820152608401610ad0565b81611dd6600183612bbc565b81518110611de657611de6612aa0565b60200260200101518303611e625760405162461bcd60e51b815260206004820152602f60248201527f436f6c6f737365756d3a20746865206c617374207365676d656e74206d75737460448201527f206e6f74206265206d61746368656400000000000000000000000000000000006064820152608401610ad0565b5050505050565b805460009060ff166001611e7c82611503565b611e869190612bbc565b836003015461054c9190612d77565b8251611eaa906002860190602086019061238d565b50600484019190915560039092019190915550565b611ec881611995565b611f3357611ef67f000000000000000000000000000000000000000000000000000000000000000042612acf565b815467ffffffffffffffff91909116610100027fffffffffffffffffffffffffffffffffffffffffffffff0000000000000000ff90911617815550565b611ef67f000000000000000000000000000000000000000000000000000000000000000042612acf565b50565b80546000906901000000000000000000900460ff1615611f8257506007919050565b8154600160ff9091161015611f9957506000919050565b600582015415611fab57506006919050565b8154600090611fbc9060ff166122b9565b8354909150610100900467ffffffffffffffff16421115612042578015611fe65750600392915050565b825461202b90612026907f000000000000000000000000000000000000000000000000000000000000000090610100900467ffffffffffffffff16612acf565b421190565b156120395750600392915050565b50600492915050565b61204b83611995565b6120585750600592915050565b8061206457600261054c565b60019392505050565b6002815161207b9190612d8b565b156120ee5760405162461bcd60e51b815260206004820152603b60248201527f436f6c6f737365756d3a206c656e677468206f66207365676d656e7473206c6560448201527f6e677468732063616e6e6f74206265206f6464206e756d6265722e00000000006064820152608401610ad0565b600160005b82518110156121675782818151811061210e5761210e612aa0565b60200260200101516001600083815260200190815260200160002081905550600183828151811061214157612141612aa0565b60200260200101516121539190612bbc565b61215d9083612ae7565b91506001016120f3565b507f00000000000000000000000000000000000000000000000000000000000000008114610eb55760405162461bcd60e51b815260206004820152602360248201527f436f6c6f737365756d3a20696e76616c6964207365676d656e7473206c656e6760448201527f74687300000000000000000000000000000000000000000000000000000000006064820152608401610ad0565b80516000906122155761220f826122d0565b92915050565b81517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016122465761220f8261232c565b60405162461bcd60e51b815260206004820152602a60248201527f48617368696e673a20756e6b6e6f776e206f757470757420726f6f742070726f60448201527f6f662076657273696f6e000000000000000000000000000000000000000000006064820152608401610ad0565b919050565b60006122c6600283612d9f565b60ff161592915050565b6000816000015182602001518360400151846060015160405160200161230f949392919093845260208401929092526040830152606082015260800190565b604051602081830303815290604052805190602001209050919050565b80516020808301516040808501516060808701516080808901518551978801989098529386019490945284015282015260a081019190915260009060c00161230f565b5080546000825590600052602060002090810190611f5d91906123d8565b8280548282559060005260206000209081019282156123c8579160200282015b828111156123c85782518255916020019190600101906123ad565b506123d49291506123d8565b5090565b5b808211156123d457600081556001016123d9565b6000602082840312156123ff57600080fd5b5035919050565b600081518084526020808501945080840160005b838110156124365781518752958201959082019060010161241a565b509495945050505050565b6020815261245560208201835160ff169052565b60006020830151612472604084018267ffffffffffffffff169052565b506040830151801515606084015250606083015173ffffffffffffffffffffffffffffffffffffffff8116608084015250608083015173ffffffffffffffffffffffffffffffffffffffff811660a08401525060a08301516101208060c08501526124e1610140850183612406565b60c086015160e08681019190915286015161010080870191909152909501519301929092525090919050565b73ffffffffffffffffffffffffffffffffffffffff81168114611f5d57600080fd5b6000806040838503121561254257600080fd5b8235915060208301356125548161250d565b809150509250929050565b60005b8381101561257a578181015183820152602001612562565b83811115612589576000848401525b50505050565b600081518084526125a781602086016020860161255f565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061054c602083018461258f565b60008083601f8401126125fe57600080fd5b50813567ffffffffffffffff81111561261657600080fd5b6020830191508360208260051b850101111561263157600080fd5b9250929050565b6000806000806060858703121561264e57600080fd5b8435935060208501359250604085013567ffffffffffffffff81111561267357600080fd5b61267f878288016125ec565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60208101600883106126f5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612771576127716126fb565b604052919050565b6000602080838503121561278c57600080fd5b823567ffffffffffffffff808211156127a457600080fd5b818501915085601f8301126127b857600080fd5b8135818111156127ca576127ca6126fb565b8060051b91506127db84830161272a565b81815291830184019184810190888411156127f557600080fd5b938501935b83851015612813578435825293850193908501906127fa565b98975050505050505050565b60008060006040848603121561283457600080fd5b83359250602084013567ffffffffffffffff81111561285257600080fd5b61285e868287016125ec565b9497909650939450505050565b60006020828403121561287d57600080fd5b813560ff8116811461054c57600080fd5b600060a082840312156128a057600080fd5b50919050565b600061014082840312156128a057600080fd5b600061012082840312156128a057600080fd5b60008060008060008060008060008060006102208c8e0312156128ee57600080fd5b8b359a5060208c0135995060408c0135985061290d8d60608e0161288e565b975061291d8d6101008e0161288e565b965067ffffffffffffffff806101a08e0135111561293a57600080fd5b61294b8e6101a08f01358f016128a6565b9650806101c08e0135111561295f57600080fd5b6129708e6101c08f01358f016128b9565b9550806101e08e0135111561298457600080fd5b6129958e6101e08f01358f016125ec565b90955093506102008d01358110156129ac57600080fd5b506129be8d6102008e01358e016125ec565b81935080925050509295989b509295989b9093969950565b600084516129e881846020890161255f565b80830190507f2e000000000000000000000000000000000000000000000000000000000000008082528551612a24816001850160208a0161255f565b60019201918201528351612a3f81600284016020880161255f565b0160020195945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060ff821660ff84168060ff03821115612a9857612a98612a4c565b019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008219821115612ae257612ae2612a4c565b500190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612b1f57612b1f612a4c565b500290565b80516fffffffffffffffffffffffffffffffff811681146122b457600080fd5b600060808284031215612b5657600080fd5b6040516080810181811067ffffffffffffffff82111715612b7957612b796126fb565b6040528251612b878161250d565b815260208381015190820152612b9f60408401612b24565b6040820152612bb060608401612b24565b60608201529392505050565b600082821015612bce57612bce612a4c565b500390565b600060208284031215612be557600080fd5b815161054c8161250d565b60006fffffffffffffffffffffffffffffffff83811690831681811015612c1957612c19612a4c565b039392505050565b600060ff821660ff841680821015612c3b57612c3b612a4c565b90039392505050565b600060a08284031215612c5657600080fd5b60405160a0810181811067ffffffffffffffff82111715612c7957612c796126fb565b806040525082358152602083013560208201526040830135604082015260608301356060820152608083013560808201528091505092915050565b600060208284031215612cc657600080fd5b813567ffffffffffffffff8116811461054c57600080fd5b83815267ffffffffffffffff83166020820152606060408201526000612d07606083018461258f565b95945050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612d4157612d41612a4c565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082612d8657612d86612d48565b500490565b600082612d9a57612d9a612d48565b500690565b600060ff831680612db257612db2612d48565b8060ff8416069150509291505056fea164736f6c634300080f000a",
}

// ColosseumABI is the input ABI used to generate the binding from.
// Deprecated: Use ColosseumMetaData.ABI instead.
var ColosseumABI = ColosseumMetaData.ABI

// ColosseumBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ColosseumMetaData.Bin instead.
var ColosseumBin = ColosseumMetaData.Bin

// DeployColosseum deploys a new Ethereum contract, binding an instance of Colosseum to it.
func DeployColosseum(auth *bind.TransactOpts, backend bind.ContractBackend, _l2Oracle common.Address, _zkVerifier common.Address, _submissionInterval *big.Int, _bisectionTimeout *big.Int, _provingTimeout *big.Int, _dummyHash [32]byte, _maxTxs *big.Int, _segmentsLengths []*big.Int, _securityCouncil common.Address) (common.Address, *types.Transaction, *Colosseum, error) {
	parsed, err := ColosseumMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ColosseumBin), backend, _l2Oracle, _zkVerifier, _submissionInterval, _bisectionTimeout, _provingTimeout, _dummyHash, _maxTxs, _segmentsLengths, _securityCouncil)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Colosseum{ColosseumCaller: ColosseumCaller{contract: contract}, ColosseumTransactor: ColosseumTransactor{contract: contract}, ColosseumFilterer: ColosseumFilterer{contract: contract}}, nil
}

// Colosseum is an auto generated Go binding around an Ethereum contract.
type Colosseum struct {
	ColosseumCaller     // Read-only binding to the contract
	ColosseumTransactor // Write-only binding to the contract
	ColosseumFilterer   // Log filterer for contract events
}

// ColosseumCaller is an auto generated read-only Go binding around an Ethereum contract.
type ColosseumCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ColosseumTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ColosseumTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ColosseumFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ColosseumFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ColosseumSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ColosseumSession struct {
	Contract     *Colosseum        // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ColosseumCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ColosseumCallerSession struct {
	Contract *ColosseumCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts    // Call options to use throughout this session
}

// ColosseumTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ColosseumTransactorSession struct {
	Contract     *ColosseumTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts    // Transaction auth options to use throughout this session
}

// ColosseumRaw is an auto generated low-level Go binding around an Ethereum contract.
type ColosseumRaw struct {
	Contract *Colosseum // Generic contract binding to access the raw methods on
}

// ColosseumCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ColosseumCallerRaw struct {
	Contract *ColosseumCaller // Generic read-only contract binding to access the raw methods on
}

// ColosseumTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ColosseumTransactorRaw struct {
	Contract *ColosseumTransactor // Generic write-only contract binding to access the raw methods on
}

// NewColosseum creates a new instance of Colosseum, bound to a specific deployed contract.
func NewColosseum(address common.Address, backend bind.ContractBackend) (*Colosseum, error) {
	contract, err := bindColosseum(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Colosseum{ColosseumCaller: ColosseumCaller{contract: contract}, ColosseumTransactor: ColosseumTransactor{contract: contract}, ColosseumFilterer: ColosseumFilterer{contract: contract}}, nil
}

// NewColosseumCaller creates a new read-only instance of Colosseum, bound to a specific deployed contract.
func NewColosseumCaller(address common.Address, caller bind.ContractCaller) (*ColosseumCaller, error) {
	contract, err := bindColosseum(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ColosseumCaller{contract: contract}, nil
}

// NewColosseumTransactor creates a new write-only instance of Colosseum, bound to a specific deployed contract.
func NewColosseumTransactor(address common.Address, transactor bind.ContractTransactor) (*ColosseumTransactor, error) {
	contract, err := bindColosseum(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ColosseumTransactor{contract: contract}, nil
}

// NewColosseumFilterer creates a new log filterer instance of Colosseum, bound to a specific deployed contract.
func NewColosseumFilterer(address common.Address, filterer bind.ContractFilterer) (*ColosseumFilterer, error) {
	contract, err := bindColosseum(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ColosseumFilterer{contract: contract}, nil
}

// bindColosseum binds a generic wrapper to an already deployed contract.
func bindColosseum(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ColosseumMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Colosseum *ColosseumRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Colosseum.Contract.ColosseumCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Colosseum *ColosseumRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Colosseum.Contract.ColosseumTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Colosseum *ColosseumRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Colosseum.Contract.ColosseumTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Colosseum *ColosseumCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Colosseum.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Colosseum *ColosseumTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Colosseum.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Colosseum *ColosseumTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Colosseum.Contract.contract.Transact(opts, method, params...)
}

// BISECTIONTIMEOUT is a free data retrieval call binding the contract method 0x4394c584.
//
// Solidity: function BISECTION_TIMEOUT() view returns(uint256)
func (_Colosseum *ColosseumCaller) BISECTIONTIMEOUT(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Colosseum.contract.Call(opts, &out, "BISECTION_TIMEOUT")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// BISECTIONTIMEOUT is a free data retrieval call binding the contract method 0x4394c584.
//
// Solidity: function BISECTION_TIMEOUT() view returns(uint256)
func (_Colosseum *ColosseumSession) BISECTIONTIMEOUT() (*big.Int, error) {
	return _Colosseum.Contract.BISECTIONTIMEOUT(&_Colosseum.CallOpts)
}

// BISECTIONTIMEOUT is a free data retrieval call binding the contract method 0x4394c584.
//
// Solidity: function BISECTION_TIMEOUT() view returns(uint256)
func (_Colosseum *ColosseumCallerSession) BISECTIONTIMEOUT() (*big.Int, error) {
	return _Colosseum.Contract.BISECTIONTIMEOUT(&_Colosseum.CallOpts)
}

// DUMMYHASH is a free data retrieval call binding the contract method 0xd5145ebc.
//
// Solidity: function DUMMY_HASH() view returns(bytes32)
func (_Colosseum *ColosseumCaller) DUMMYHASH(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _Colosseum.contract.Call(opts, &out, "DUMMY_HASH")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// DUMMYHASH is a free data retrieval call binding the contract method 0xd5145ebc.
//
// Solidity: function DUMMY_HASH() view returns(bytes32)
func (_Colosseum *ColosseumSession) DUMMYHASH() ([32]byte, error) {
	return _Colosseum.Contract.DUMMYHASH(&_Colosseum.CallOpts)
}

// DUMMYHASH is a free data retrieval call binding the contract method 0xd5145ebc.
//
// Solidity: function DUMMY_HASH() view returns(bytes32)
func (_Colosseum *ColosseumCallerSession) DUMMYHASH() ([32]byte, error) {
	return _Colosseum.Contract.DUMMYHASH(&_Colosseum.CallOpts)
}

// L2ORACLE is a free data retrieval call binding the contract method 0x001c2ff6.
//
// Solidity: function L2_ORACLE() view returns(address)
func (_Colosseum *ColosseumCaller) L2ORACLE(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Colosseum.contract.Call(opts, &out, "L2_ORACLE")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// L2ORACLE is a free data retrieval call binding the contract method 0x001c2ff6.
//
// Solidity: function L2_ORACLE() view returns(address)
func (_Colosseum *ColosseumSession) L2ORACLE() (common.Address, error) {
	return _Colosseum.Contract.L2ORACLE(&_Colosseum.CallOpts)
}

// L2ORACLE is a free data retrieval call binding the contract method 0x001c2ff6.
//
// Solidity: function L2_ORACLE() view returns(address)
func (_Colosseum *ColosseumCallerSession) L2ORACLE() (common.Address, error) {
	return _Colosseum.Contract.L2ORACLE(&_Colosseum.CallOpts)
}

// L2ORACLESUBMISSIONINTERVAL is a free data retrieval call binding the contract method 0xcfb4474d.
//
// Solidity: function L2_ORACLE_SUBMISSION_INTERVAL() view returns(uint256)
func (_Colosseum *ColosseumCaller) L2ORACLESUBMISSIONINTERVAL(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Colosseum.contract.Call(opts, &out, "L2_ORACLE_SUBMISSION_INTERVAL")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// L2ORACLESUBMISSIONINTERVAL is a free data retrieval call binding the contract method 0xcfb4474d.
//
// Solidity: function L2_ORACLE_SUBMISSION_INTERVAL() view returns(uint256)
func (_Colosseum *ColosseumSession) L2ORACLESUBMISSIONINTERVAL() (*big.Int, error) {
	return _Colosseum.Contract.L2ORACLESUBMISSIONINTERVAL(&_Colosseum.CallOpts)
}

// L2ORACLESUBMISSIONINTERVAL is a free data retrieval call binding the contract method 0xcfb4474d.
//
// Solidity: function L2_ORACLE_SUBMISSION_INTERVAL() view returns(uint256)
func (_Colosseum *ColosseumCallerSession) L2ORACLESUBMISSIONINTERVAL() (*big.Int, error) {
	return _Colosseum.Contract.L2ORACLESUBMISSIONINTERVAL(&_Colosseum.CallOpts)
}

// MAXTXS is a free data retrieval call binding the contract method 0x5375b891.
//
// Solidity: function MAX_TXS() view returns(uint256)
func (_Colosseum *ColosseumCaller) MAXTXS(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Colosseum.contract.Call(opts, &out, "MAX_TXS")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MAXTXS is a free data retrieval call binding the contract method 0x5375b891.
//
// Solidity: function MAX_TXS() view returns(uint256)
func (_Colosseum *ColosseumSession) MAXTXS() (*big.Int, error) {
	return _Colosseum.Contract.MAXTXS(&_Colosseum.CallOpts)
}

// MAXTXS is a free data retrieval call binding the contract method 0x5375b891.
//
// Solidity: function MAX_TXS() view returns(uint256)
func (_Colosseum *ColosseumCallerSession) MAXTXS() (*big.Int, error) {
	return _Colosseum.Contract.MAXTXS(&_Colosseum.CallOpts)
}

// PROVINGTIMEOUT is a free data retrieval call binding the contract method 0xd2ee3075.
//
// Solidity: function PROVING_TIMEOUT() view returns(uint256)
func (_Colosseum *ColosseumCaller) PROVINGTIMEOUT(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Colosseum.contract.Call(opts, &out, "PROVING_TIMEOUT")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// PROVINGTIMEOUT is a free data retrieval call binding the contract method 0xd2ee3075.
//
// Solidity: function PROVING_TIMEOUT() view returns(uint256)
func (_Colosseum *ColosseumSession) PROVINGTIMEOUT() (*big.Int, error) {
	return _Colosseum.Contract.PROVINGTIMEOUT(&_Colosseum.CallOpts)
}

// PROVINGTIMEOUT is a free data retrieval call binding the contract method 0xd2ee3075.
//
// Solidity: function PROVING_TIMEOUT() view returns(uint256)
func (_Colosseum *ColosseumCallerSession) PROVINGTIMEOUT() (*big.Int, error) {
	return _Colosseum.Contract.PROVINGTIMEOUT(&_Colosseum.CallOpts)
}

// SECURITYCOUNCIL is a free data retrieval call binding the contract method 0x36086417.
//
// Solidity: function SECURITY_COUNCIL() view returns(address)
func (_Colosseum *ColosseumCaller) SECURITYCOUNCIL(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Colosseum.contract.Call(opts, &out, "SECURITY_COUNCIL")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// SECURITYCOUNCIL is a free data retrieval call binding the contract method 0x36086417.
//
// Solidity: function SECURITY_COUNCIL() view returns(address)
func (_Colosseum *ColosseumSession) SECURITYCOUNCIL() (common.Address, error) {
	return _Colosseum.Contract.SECURITYCOUNCIL(&_Colosseum.CallOpts)
}

// SECURITYCOUNCIL is a free data retrieval call binding the contract method 0x36086417.
//
// Solidity: function SECURITY_COUNCIL() view returns(address)
func (_Colosseum *ColosseumCallerSession) SECURITYCOUNCIL() (common.Address, error) {
	return _Colosseum.Contract.SECURITYCOUNCIL(&_Colosseum.CallOpts)
}

// ZKVERIFIER is a free data retrieval call binding the contract method 0x9ded3952.
//
// Solidity: function ZK_VERIFIER() view returns(address)
func (_Colosseum *ColosseumCaller) ZKVERIFIER(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Colosseum.contract.Call(opts, &out, "ZK_VERIFIER")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// ZKVERIFIER is a free data retrieval call binding the contract method 0x9ded3952.
//
// Solidity: function ZK_VERIFIER() view returns(address)
func (_Colosseum *ColosseumSession) ZKVERIFIER() (common.Address, error) {
	return _Colosseum.Contract.ZKVERIFIER(&_Colosseum.CallOpts)
}

// ZKVERIFIER is a free data retrieval call binding the contract method 0x9ded3952.
//
// Solidity: function ZK_VERIFIER() view returns(address)
func (_Colosseum *ColosseumCallerSession) ZKVERIFIER() (common.Address, error) {
	return _Colosseum.Contract.ZKVERIFIER(&_Colosseum.CallOpts)
}

// Challenges is a free data retrieval call binding the contract method 0x8f1d3776.
//
// Solidity: function challenges(uint256 ) view returns(uint8 turn, uint64 timeoutAt, bool approved, address asserter, address challenger, uint256 segSize, uint256 segStart, bytes32 outputRoot)
func (_Colosseum *ColosseumCaller) Challenges(opts *bind.CallOpts, arg0 *big.Int) (struct {
	Turn       uint8
	TimeoutAt  uint64
	Approved   bool
	Asserter   common.Address
	Challenger common.Address
	SegSize    *big.Int
	SegStart   *big.Int
	OutputRoot [32]byte
}, error) {
	var out []interface{}
	err := _Colosseum.contract.Call(opts, &out, "challenges", arg0)

	outstruct := new(struct {
		Turn       uint8
		TimeoutAt  uint64
		Approved   bool
		Asserter   common.Address
		Challenger common.Address
		SegSize    *big.Int
		SegStart   *big.Int
		OutputRoot [32]byte
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Turn = *abi.ConvertType(out[0], new(uint8)).(*uint8)
	outstruct.TimeoutAt = *abi.ConvertType(out[1], new(uint64)).(*uint64)
	outstruct.Approved = *abi.ConvertType(out[2], new(bool)).(*bool)
	outstruct.Asserter = *abi.ConvertType(out[3], new(common.Address)).(*common.Address)
	outstruct.Challenger = *abi.ConvertType(out[4], new(common.Address)).(*common.Address)
	outstruct.SegSize = *abi.ConvertType(out[5], new(*big.Int)).(**big.Int)
	outstruct.SegStart = *abi.ConvertType(out[6], new(*big.Int)).(**big.Int)
	outstruct.OutputRoot = *abi.ConvertType(out[7], new([32]byte)).(*[32]byte)

	return *outstruct, err

}

// Challenges is a free data retrieval call binding the contract method 0x8f1d3776.
//
// Solidity: function challenges(uint256 ) view returns(uint8 turn, uint64 timeoutAt, bool approved, address asserter, address challenger, uint256 segSize, uint256 segStart, bytes32 outputRoot)
func (_Colosseum *ColosseumSession) Challenges(arg0 *big.Int) (struct {
	Turn       uint8
	TimeoutAt  uint64
	Approved   bool
	Asserter   common.Address
	Challenger common.Address
	SegSize    *big.Int
	SegStart   *big.Int
	OutputRoot [32]byte
}, error) {
	return _Colosseum.Contract.Challenges(&_Colosseum.CallOpts, arg0)
}

// Challenges is a free data retrieval call binding the contract method 0x8f1d3776.
//
// Solidity: function challenges(uint256 ) view returns(uint8 turn, uint64 timeoutAt, bool approved, address asserter, address challenger, uint256 segSize, uint256 segStart, bytes32 outputRoot)
func (_Colosseum *ColosseumCallerSession) Challenges(arg0 *big.Int) (struct {
	Turn       uint8
	TimeoutAt  uint64
	Approved   bool
	Asserter   common.Address
	Challenger common.Address
	SegSize    *big.Int
	SegStart   *big.Int
	OutputRoot [32]byte
}, error) {
	return _Colosseum.Contract.Challenges(&_Colosseum.CallOpts, arg0)
}

// GetChallenge is a free data retrieval call binding the contract method 0x1bdd4b74.
//
// Solidity: function getChallenge(uint256 _outputIndex) view returns((uint8,uint64,bool,address,address,bytes32[],uint256,uint256,bytes32))
func (_Colosseum *ColosseumCaller) GetChallenge(opts *bind.CallOpts, _outputIndex *big.Int) (TypesChallenge, error) {
	var out []interface{}
	err := _Colosseum.contract.Call(opts, &out, "getChallenge", _outputIndex)

	if err != nil {
		return *new(TypesChallenge), err
	}

	out0 := *abi.ConvertType(out[0], new(TypesChallenge)).(*TypesChallenge)

	return out0, err

}

// GetChallenge is a free data retrieval call binding the contract method 0x1bdd4b74.
//
// Solidity: function getChallenge(uint256 _outputIndex) view returns((uint8,uint64,bool,address,address,bytes32[],uint256,uint256,bytes32))
func (_Colosseum *ColosseumSession) GetChallenge(_outputIndex *big.Int) (TypesChallenge, error) {
	return _Colosseum.Contract.GetChallenge(&_Colosseum.CallOpts, _outputIndex)
}

// GetChallenge is a free data retrieval call binding the contract method 0x1bdd4b74.
//
// Solidity: function getChallenge(uint256 _outputIndex) view returns((uint8,uint64,bool,address,address,bytes32[],uint256,uint256,bytes32))
func (_Colosseum *ColosseumCallerSession) GetChallenge(_outputIndex *big.Int) (TypesChallenge, error) {
	return _Colosseum.Contract.GetChallenge(&_Colosseum.CallOpts, _outputIndex)
}

// GetSegmentsLength is a free data retrieval call binding the contract method 0xb8b1a27c.
//
// Solidity: function getSegmentsLength(uint8 _turn) view returns(uint256)
func (_Colosseum *ColosseumCaller) GetSegmentsLength(opts *bind.CallOpts, _turn uint8) (*big.Int, error) {
	var out []interface{}
	err := _Colosseum.contract.Call(opts, &out, "getSegmentsLength", _turn)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetSegmentsLength is a free data retrieval call binding the contract method 0xb8b1a27c.
//
// Solidity: function getSegmentsLength(uint8 _turn) view returns(uint256)
func (_Colosseum *ColosseumSession) GetSegmentsLength(_turn uint8) (*big.Int, error) {
	return _Colosseum.Contract.GetSegmentsLength(&_Colosseum.CallOpts, _turn)
}

// GetSegmentsLength is a free data retrieval call binding the contract method 0xb8b1a27c.
//
// Solidity: function getSegmentsLength(uint8 _turn) view returns(uint256)
func (_Colosseum *ColosseumCallerSession) GetSegmentsLength(_turn uint8) (*big.Int, error) {
	return _Colosseum.Contract.GetSegmentsLength(&_Colosseum.CallOpts, _turn)
}

// GetStatus is a free data retrieval call binding the contract method 0x5c622a0e.
//
// Solidity: function getStatus(uint256 _outputIndex) view returns(uint8)
func (_Colosseum *ColosseumCaller) GetStatus(opts *bind.CallOpts, _outputIndex *big.Int) (uint8, error) {
	var out []interface{}
	err := _Colosseum.contract.Call(opts, &out, "getStatus", _outputIndex)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// GetStatus is a free data retrieval call binding the contract method 0x5c622a0e.
//
// Solidity: function getStatus(uint256 _outputIndex) view returns(uint8)
func (_Colosseum *ColosseumSession) GetStatus(_outputIndex *big.Int) (uint8, error) {
	return _Colosseum.Contract.GetStatus(&_Colosseum.CallOpts, _outputIndex)
}

// GetStatus is a free data retrieval call binding the contract method 0x5c622a0e.
//
// Solidity: function getStatus(uint256 _outputIndex) view returns(uint8)
func (_Colosseum *ColosseumCallerSession) GetStatus(_outputIndex *big.Int) (uint8, error) {
	return _Colosseum.Contract.GetStatus(&_Colosseum.CallOpts, _outputIndex)
}

// IsAbleToBisect is a free data retrieval call binding the contract method 0x0d304c08.
//
// Solidity: function isAbleToBisect(uint256 _outputIndex) view returns(bool)
func (_Colosseum *ColosseumCaller) IsAbleToBisect(opts *bind.CallOpts, _outputIndex *big.Int) (bool, error) {
	var out []interface{}
	err := _Colosseum.contract.Call(opts, &out, "isAbleToBisect", _outputIndex)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsAbleToBisect is a free data retrieval call binding the contract method 0x0d304c08.
//
// Solidity: function isAbleToBisect(uint256 _outputIndex) view returns(bool)
func (_Colosseum *ColosseumSession) IsAbleToBisect(_outputIndex *big.Int) (bool, error) {
	return _Colosseum.Contract.IsAbleToBisect(&_Colosseum.CallOpts, _outputIndex)
}

// IsAbleToBisect is a free data retrieval call binding the contract method 0x0d304c08.
//
// Solidity: function isAbleToBisect(uint256 _outputIndex) view returns(bool)
func (_Colosseum *ColosseumCallerSession) IsAbleToBisect(_outputIndex *big.Int) (bool, error) {
	return _Colosseum.Contract.IsAbleToBisect(&_Colosseum.CallOpts, _outputIndex)
}

// IsChallengeRelated is a free data retrieval call binding the contract method 0x29204bc8.
//
// Solidity: function isChallengeRelated(uint256 _outputIndex, address _address) view returns(bool)
func (_Colosseum *ColosseumCaller) IsChallengeRelated(opts *bind.CallOpts, _outputIndex *big.Int, _address common.Address) (bool, error) {
	var out []interface{}
	err := _Colosseum.contract.Call(opts, &out, "isChallengeRelated", _outputIndex, _address)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsChallengeRelated is a free data retrieval call binding the contract method 0x29204bc8.
//
// Solidity: function isChallengeRelated(uint256 _outputIndex, address _address) view returns(bool)
func (_Colosseum *ColosseumSession) IsChallengeRelated(_outputIndex *big.Int, _address common.Address) (bool, error) {
	return _Colosseum.Contract.IsChallengeRelated(&_Colosseum.CallOpts, _outputIndex, _address)
}

// IsChallengeRelated is a free data retrieval call binding the contract method 0x29204bc8.
//
// Solidity: function isChallengeRelated(uint256 _outputIndex, address _address) view returns(bool)
func (_Colosseum *ColosseumCallerSession) IsChallengeRelated(_outputIndex *big.Int, _address common.Address) (bool, error) {
	return _Colosseum.Contract.IsChallengeRelated(&_Colosseum.CallOpts, _outputIndex, _address)
}

// IsInProgress is a free data retrieval call binding the contract method 0x1728fad1.
//
// Solidity: function isInProgress(uint256 _outputIndex) view returns(bool)
func (_Colosseum *ColosseumCaller) IsInProgress(opts *bind.CallOpts, _outputIndex *big.Int) (bool, error) {
	var out []interface{}
	err := _Colosseum.contract.Call(opts, &out, "isInProgress", _outputIndex)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsInProgress is a free data retrieval call binding the contract method 0x1728fad1.
//
// Solidity: function isInProgress(uint256 _outputIndex) view returns(bool)
func (_Colosseum *ColosseumSession) IsInProgress(_outputIndex *big.Int) (bool, error) {
	return _Colosseum.Contract.IsInProgress(&_Colosseum.CallOpts, _outputIndex)
}

// IsInProgress is a free data retrieval call binding the contract method 0x1728fad1.
//
// Solidity: function isInProgress(uint256 _outputIndex) view returns(bool)
func (_Colosseum *ColosseumCallerSession) IsInProgress(_outputIndex *big.Int) (bool, error) {
	return _Colosseum.Contract.IsInProgress(&_Colosseum.CallOpts, _outputIndex)
}

// VerifiedPublicInputs is a free data retrieval call binding the contract method 0x1be4e27e.
//
// Solidity: function verifiedPublicInputs(bytes32 ) view returns(bool)
func (_Colosseum *ColosseumCaller) VerifiedPublicInputs(opts *bind.CallOpts, arg0 [32]byte) (bool, error) {
	var out []interface{}
	err := _Colosseum.contract.Call(opts, &out, "verifiedPublicInputs", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// VerifiedPublicInputs is a free data retrieval call binding the contract method 0x1be4e27e.
//
// Solidity: function verifiedPublicInputs(bytes32 ) view returns(bool)
func (_Colosseum *ColosseumSession) VerifiedPublicInputs(arg0 [32]byte) (bool, error) {
	return _Colosseum.Contract.VerifiedPublicInputs(&_Colosseum.CallOpts, arg0)
}

// VerifiedPublicInputs is a free data retrieval call binding the contract method 0x1be4e27e.
//
// Solidity: function verifiedPublicInputs(bytes32 ) view returns(bool)
func (_Colosseum *ColosseumCallerSession) VerifiedPublicInputs(arg0 [32]byte) (bool, error) {
	return _Colosseum.Contract.VerifiedPublicInputs(&_Colosseum.CallOpts, arg0)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() view returns(string)
func (_Colosseum *ColosseumCaller) Version(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Colosseum.contract.Call(opts, &out, "version")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() view returns(string)
func (_Colosseum *ColosseumSession) Version() (string, error) {
	return _Colosseum.Contract.Version(&_Colosseum.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() view returns(string)
func (_Colosseum *ColosseumCallerSession) Version() (string, error) {
	return _Colosseum.Contract.Version(&_Colosseum.CallOpts)
}

// ApproveChallenge is a paid mutator transaction binding the contract method 0x586b7414.
//
// Solidity: function approveChallenge(uint256 _outputIndex) returns()
func (_Colosseum *ColosseumTransactor) ApproveChallenge(opts *bind.TransactOpts, _outputIndex *big.Int) (*types.Transaction, error) {
	return _Colosseum.contract.Transact(opts, "approveChallenge", _outputIndex)
}

// ApproveChallenge is a paid mutator transaction binding the contract method 0x586b7414.
//
// Solidity: function approveChallenge(uint256 _outputIndex) returns()
func (_Colosseum *ColosseumSession) ApproveChallenge(_outputIndex *big.Int) (*types.Transaction, error) {
	return _Colosseum.Contract.ApproveChallenge(&_Colosseum.TransactOpts, _outputIndex)
}

// ApproveChallenge is a paid mutator transaction binding the contract method 0x586b7414.
//
// Solidity: function approveChallenge(uint256 _outputIndex) returns()
func (_Colosseum *ColosseumTransactorSession) ApproveChallenge(_outputIndex *big.Int) (*types.Transaction, error) {
	return _Colosseum.Contract.ApproveChallenge(&_Colosseum.TransactOpts, _outputIndex)
}

// Bisect is a paid mutator transaction binding the contract method 0x57133278.
//
// Solidity: function bisect(uint256 _outputIndex, uint256 _pos, bytes32[] _segments) returns()
func (_Colosseum *ColosseumTransactor) Bisect(opts *bind.TransactOpts, _outputIndex *big.Int, _pos *big.Int, _segments [][32]byte) (*types.Transaction, error) {
	return _Colosseum.contract.Transact(opts, "bisect", _outputIndex, _pos, _segments)
}

// Bisect is a paid mutator transaction binding the contract method 0x57133278.
//
// Solidity: function bisect(uint256 _outputIndex, uint256 _pos, bytes32[] _segments) returns()
func (_Colosseum *ColosseumSession) Bisect(_outputIndex *big.Int, _pos *big.Int, _segments [][32]byte) (*types.Transaction, error) {
	return _Colosseum.Contract.Bisect(&_Colosseum.TransactOpts, _outputIndex, _pos, _segments)
}

// Bisect is a paid mutator transaction binding the contract method 0x57133278.
//
// Solidity: function bisect(uint256 _outputIndex, uint256 _pos, bytes32[] _segments) returns()
func (_Colosseum *ColosseumTransactorSession) Bisect(_outputIndex *big.Int, _pos *big.Int, _segments [][32]byte) (*types.Transaction, error) {
	return _Colosseum.Contract.Bisect(&_Colosseum.TransactOpts, _outputIndex, _pos, _segments)
}

// ChallengerTimeout is a paid mutator transaction binding the contract method 0x572419a0.
//
// Solidity: function challengerTimeout(uint256 _outputIndex) returns()
func (_Colosseum *ColosseumTransactor) ChallengerTimeout(opts *bind.TransactOpts, _outputIndex *big.Int) (*types.Transaction, error) {
	return _Colosseum.contract.Transact(opts, "challengerTimeout", _outputIndex)
}

// ChallengerTimeout is a paid mutator transaction binding the contract method 0x572419a0.
//
// Solidity: function challengerTimeout(uint256 _outputIndex) returns()
func (_Colosseum *ColosseumSession) ChallengerTimeout(_outputIndex *big.Int) (*types.Transaction, error) {
	return _Colosseum.Contract.ChallengerTimeout(&_Colosseum.TransactOpts, _outputIndex)
}

// ChallengerTimeout is a paid mutator transaction binding the contract method 0x572419a0.
//
// Solidity: function challengerTimeout(uint256 _outputIndex) returns()
func (_Colosseum *ColosseumTransactorSession) ChallengerTimeout(_outputIndex *big.Int) (*types.Transaction, error) {
	return _Colosseum.Contract.ChallengerTimeout(&_Colosseum.TransactOpts, _outputIndex)
}

// CreateChallenge is a paid mutator transaction binding the contract method 0x7ecc14be.
//
// Solidity: function createChallenge(uint256 _outputIndex, bytes32[] _segments) returns()
func (_Colosseum *ColosseumTransactor) CreateChallenge(opts *bind.TransactOpts, _outputIndex *big.Int, _segments [][32]byte) (*types.Transaction, error) {
	return _Colosseum.contract.Transact(opts, "createChallenge", _outputIndex, _segments)
}

// CreateChallenge is a paid mutator transaction binding the contract method 0x7ecc14be.
//
// Solidity: function createChallenge(uint256 _outputIndex, bytes32[] _segments) returns()
func (_Colosseum *ColosseumSession) CreateChallenge(_outputIndex *big.Int, _segments [][32]byte) (*types.Transaction, error) {
	return _Colosseum.Contract.CreateChallenge(&_Colosseum.TransactOpts, _outputIndex, _segments)
}

// CreateChallenge is a paid mutator transaction binding the contract method 0x7ecc14be.
//
// Solidity: function createChallenge(uint256 _outputIndex, bytes32[] _segments) returns()
func (_Colosseum *ColosseumTransactorSession) CreateChallenge(_outputIndex *big.Int, _segments [][32]byte) (*types.Transaction, error) {
	return _Colosseum.Contract.CreateChallenge(&_Colosseum.TransactOpts, _outputIndex, _segments)
}

// Initialize is a paid mutator transaction binding the contract method 0x6fe0e559.
//
// Solidity: function initialize(uint256[] _segmentsLengths) returns()
func (_Colosseum *ColosseumTransactor) Initialize(opts *bind.TransactOpts, _segmentsLengths []*big.Int) (*types.Transaction, error) {
	return _Colosseum.contract.Transact(opts, "initialize", _segmentsLengths)
}

// Initialize is a paid mutator transaction binding the contract method 0x6fe0e559.
//
// Solidity: function initialize(uint256[] _segmentsLengths) returns()
func (_Colosseum *ColosseumSession) Initialize(_segmentsLengths []*big.Int) (*types.Transaction, error) {
	return _Colosseum.Contract.Initialize(&_Colosseum.TransactOpts, _segmentsLengths)
}

// Initialize is a paid mutator transaction binding the contract method 0x6fe0e559.
//
// Solidity: function initialize(uint256[] _segmentsLengths) returns()
func (_Colosseum *ColosseumTransactorSession) Initialize(_segmentsLengths []*big.Int) (*types.Transaction, error) {
	return _Colosseum.Contract.Initialize(&_Colosseum.TransactOpts, _segmentsLengths)
}

// ProveFault is a paid mutator transaction binding the contract method 0xdf7bcdab.
//
// Solidity: function proveFault(uint256 _outputIndex, bytes32 _outputRoot, uint256 _pos, (bytes32,bytes32,bytes32,bytes32,bytes32) _srcOutputRootProof, (bytes32,bytes32,bytes32,bytes32,bytes32) _dstOutputRootProof, (bytes32,bytes32,uint64,uint64,uint256,uint256,bytes32,bytes32,bytes32,bytes32[]) _publicInput, (bytes,bytes,bytes,bytes,bytes,bytes,bytes,bytes,bytes) _rlps, uint256[] _proof, uint256[] _pair) returns()
func (_Colosseum *ColosseumTransactor) ProveFault(opts *bind.TransactOpts, _outputIndex *big.Int, _outputRoot [32]byte, _pos *big.Int, _srcOutputRootProof TypesOutputRootProof, _dstOutputRootProof TypesOutputRootProof, _publicInput TypesPublicInput, _rlps TypesBlockHeaderRLP, _proof []*big.Int, _pair []*big.Int) (*types.Transaction, error) {
	return _Colosseum.contract.Transact(opts, "proveFault", _outputIndex, _outputRoot, _pos, _srcOutputRootProof, _dstOutputRootProof, _publicInput, _rlps, _proof, _pair)
}

// ProveFault is a paid mutator transaction binding the contract method 0xdf7bcdab.
//
// Solidity: function proveFault(uint256 _outputIndex, bytes32 _outputRoot, uint256 _pos, (bytes32,bytes32,bytes32,bytes32,bytes32) _srcOutputRootProof, (bytes32,bytes32,bytes32,bytes32,bytes32) _dstOutputRootProof, (bytes32,bytes32,uint64,uint64,uint256,uint256,bytes32,bytes32,bytes32,bytes32[]) _publicInput, (bytes,bytes,bytes,bytes,bytes,bytes,bytes,bytes,bytes) _rlps, uint256[] _proof, uint256[] _pair) returns()
func (_Colosseum *ColosseumSession) ProveFault(_outputIndex *big.Int, _outputRoot [32]byte, _pos *big.Int, _srcOutputRootProof TypesOutputRootProof, _dstOutputRootProof TypesOutputRootProof, _publicInput TypesPublicInput, _rlps TypesBlockHeaderRLP, _proof []*big.Int, _pair []*big.Int) (*types.Transaction, error) {
	return _Colosseum.Contract.ProveFault(&_Colosseum.TransactOpts, _outputIndex, _outputRoot, _pos, _srcOutputRootProof, _dstOutputRootProof, _publicInput, _rlps, _proof, _pair)
}

// ProveFault is a paid mutator transaction binding the contract method 0xdf7bcdab.
//
// Solidity: function proveFault(uint256 _outputIndex, bytes32 _outputRoot, uint256 _pos, (bytes32,bytes32,bytes32,bytes32,bytes32) _srcOutputRootProof, (bytes32,bytes32,bytes32,bytes32,bytes32) _dstOutputRootProof, (bytes32,bytes32,uint64,uint64,uint256,uint256,bytes32,bytes32,bytes32,bytes32[]) _publicInput, (bytes,bytes,bytes,bytes,bytes,bytes,bytes,bytes,bytes) _rlps, uint256[] _proof, uint256[] _pair) returns()
func (_Colosseum *ColosseumTransactorSession) ProveFault(_outputIndex *big.Int, _outputRoot [32]byte, _pos *big.Int, _srcOutputRootProof TypesOutputRootProof, _dstOutputRootProof TypesOutputRootProof, _publicInput TypesPublicInput, _rlps TypesBlockHeaderRLP, _proof []*big.Int, _pair []*big.Int) (*types.Transaction, error) {
	return _Colosseum.Contract.ProveFault(&_Colosseum.TransactOpts, _outputIndex, _outputRoot, _pos, _srcOutputRootProof, _dstOutputRootProof, _publicInput, _rlps, _proof, _pair)
}

// ColosseumApprovedIterator is returned from FilterApproved and is used to iterate over the raw logs and unpacked data for Approved events raised by the Colosseum contract.
type ColosseumApprovedIterator struct {
	Event *ColosseumApproved // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ColosseumApprovedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ColosseumApproved)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ColosseumApproved)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ColosseumApprovedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ColosseumApprovedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ColosseumApproved represents a Approved event raised by the Colosseum contract.
type ColosseumApproved struct {
	OutputIndex *big.Int
	Timestamp   *big.Int
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterApproved is a free log retrieval operation binding the contract event 0x1527ad5e6cfbfe249bfd6f9571cbfee0ce4a12335089fa9c6efeab04fec1f7a3.
//
// Solidity: event Approved(uint256 indexed outputIndex, uint256 timestamp)
func (_Colosseum *ColosseumFilterer) FilterApproved(opts *bind.FilterOpts, outputIndex []*big.Int) (*ColosseumApprovedIterator, error) {

	var outputIndexRule []interface{}
	for _, outputIndexItem := range outputIndex {
		outputIndexRule = append(outputIndexRule, outputIndexItem)
	}

	logs, sub, err := _Colosseum.contract.FilterLogs(opts, "Approved", outputIndexRule)
	if err != nil {
		return nil, err
	}
	return &ColosseumApprovedIterator{contract: _Colosseum.contract, event: "Approved", logs: logs, sub: sub}, nil
}

// WatchApproved is a free log subscription operation binding the contract event 0x1527ad5e6cfbfe249bfd6f9571cbfee0ce4a12335089fa9c6efeab04fec1f7a3.
//
// Solidity: event Approved(uint256 indexed outputIndex, uint256 timestamp)
func (_Colosseum *ColosseumFilterer) WatchApproved(opts *bind.WatchOpts, sink chan<- *ColosseumApproved, outputIndex []*big.Int) (event.Subscription, error) {

	var outputIndexRule []interface{}
	for _, outputIndexItem := range outputIndex {
		outputIndexRule = append(outputIndexRule, outputIndexItem)
	}

	logs, sub, err := _Colosseum.contract.WatchLogs(opts, "Approved", outputIndexRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ColosseumApproved)
				if err := _Colosseum.contract.UnpackLog(event, "Approved", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseApproved is a log parse operation binding the contract event 0x1527ad5e6cfbfe249bfd6f9571cbfee0ce4a12335089fa9c6efeab04fec1f7a3.
//
// Solidity: event Approved(uint256 indexed outputIndex, uint256 timestamp)
func (_Colosseum *ColosseumFilterer) ParseApproved(log types.Log) (*ColosseumApproved, error) {
	event := new(ColosseumApproved)
	if err := _Colosseum.contract.UnpackLog(event, "Approved", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ColosseumBisectedIterator is returned from FilterBisected and is used to iterate over the raw logs and unpacked data for Bisected events raised by the Colosseum contract.
type ColosseumBisectedIterator struct {
	Event *ColosseumBisected // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ColosseumBisectedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ColosseumBisected)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ColosseumBisected)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ColosseumBisectedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ColosseumBisectedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ColosseumBisected represents a Bisected event raised by the Colosseum contract.
type ColosseumBisected struct {
	OutputIndex *big.Int
	Turn        uint8
	Timestamp   *big.Int
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterBisected is a free log retrieval operation binding the contract event 0xa2bae20ceacd256f82b17383dce1a4ae47160249716414a902f45a7f234e8302.
//
// Solidity: event Bisected(uint256 indexed outputIndex, uint8 turn, uint256 timestamp)
func (_Colosseum *ColosseumFilterer) FilterBisected(opts *bind.FilterOpts, outputIndex []*big.Int) (*ColosseumBisectedIterator, error) {

	var outputIndexRule []interface{}
	for _, outputIndexItem := range outputIndex {
		outputIndexRule = append(outputIndexRule, outputIndexItem)
	}

	logs, sub, err := _Colosseum.contract.FilterLogs(opts, "Bisected", outputIndexRule)
	if err != nil {
		return nil, err
	}
	return &ColosseumBisectedIterator{contract: _Colosseum.contract, event: "Bisected", logs: logs, sub: sub}, nil
}

// WatchBisected is a free log subscription operation binding the contract event 0xa2bae20ceacd256f82b17383dce1a4ae47160249716414a902f45a7f234e8302.
//
// Solidity: event Bisected(uint256 indexed outputIndex, uint8 turn, uint256 timestamp)
func (_Colosseum *ColosseumFilterer) WatchBisected(opts *bind.WatchOpts, sink chan<- *ColosseumBisected, outputIndex []*big.Int) (event.Subscription, error) {

	var outputIndexRule []interface{}
	for _, outputIndexItem := range outputIndex {
		outputIndexRule = append(outputIndexRule, outputIndexItem)
	}

	logs, sub, err := _Colosseum.contract.WatchLogs(opts, "Bisected", outputIndexRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ColosseumBisected)
				if err := _Colosseum.contract.UnpackLog(event, "Bisected", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseBisected is a log parse operation binding the contract event 0xa2bae20ceacd256f82b17383dce1a4ae47160249716414a902f45a7f234e8302.
//
// Solidity: event Bisected(uint256 indexed outputIndex, uint8 turn, uint256 timestamp)
func (_Colosseum *ColosseumFilterer) ParseBisected(log types.Log) (*ColosseumBisected, error) {
	event := new(ColosseumBisected)
	if err := _Colosseum.contract.UnpackLog(event, "Bisected", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ColosseumChallengeCreatedIterator is returned from FilterChallengeCreated and is used to iterate over the raw logs and unpacked data for ChallengeCreated events raised by the Colosseum contract.
type ColosseumChallengeCreatedIterator struct {
	Event *ColosseumChallengeCreated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ColosseumChallengeCreatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ColosseumChallengeCreated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ColosseumChallengeCreated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ColosseumChallengeCreatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ColosseumChallengeCreatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ColosseumChallengeCreated represents a ChallengeCreated event raised by the Colosseum contract.
type ColosseumChallengeCreated struct {
	OutputIndex *big.Int
	Asserter    common.Address
	Challenger  common.Address
	Timestamp   *big.Int
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterChallengeCreated is a free log retrieval operation binding the contract event 0xd2f7931a802085b3d0234d4c320ce7ee0041da96678ce2bf5c93e8d3d7e65f52.
//
// Solidity: event ChallengeCreated(uint256 indexed outputIndex, address indexed asserter, address indexed challenger, uint256 timestamp)
func (_Colosseum *ColosseumFilterer) FilterChallengeCreated(opts *bind.FilterOpts, outputIndex []*big.Int, asserter []common.Address, challenger []common.Address) (*ColosseumChallengeCreatedIterator, error) {

	var outputIndexRule []interface{}
	for _, outputIndexItem := range outputIndex {
		outputIndexRule = append(outputIndexRule, outputIndexItem)
	}
	var asserterRule []interface{}
	for _, asserterItem := range asserter {
		asserterRule = append(asserterRule, asserterItem)
	}
	var challengerRule []interface{}
	for _, challengerItem := range challenger {
		challengerRule = append(challengerRule, challengerItem)
	}

	logs, sub, err := _Colosseum.contract.FilterLogs(opts, "ChallengeCreated", outputIndexRule, asserterRule, challengerRule)
	if err != nil {
		return nil, err
	}
	return &ColosseumChallengeCreatedIterator{contract: _Colosseum.contract, event: "ChallengeCreated", logs: logs, sub: sub}, nil
}

// WatchChallengeCreated is a free log subscription operation binding the contract event 0xd2f7931a802085b3d0234d4c320ce7ee0041da96678ce2bf5c93e8d3d7e65f52.
//
// Solidity: event ChallengeCreated(uint256 indexed outputIndex, address indexed asserter, address indexed challenger, uint256 timestamp)
func (_Colosseum *ColosseumFilterer) WatchChallengeCreated(opts *bind.WatchOpts, sink chan<- *ColosseumChallengeCreated, outputIndex []*big.Int, asserter []common.Address, challenger []common.Address) (event.Subscription, error) {

	var outputIndexRule []interface{}
	for _, outputIndexItem := range outputIndex {
		outputIndexRule = append(outputIndexRule, outputIndexItem)
	}
	var asserterRule []interface{}
	for _, asserterItem := range asserter {
		asserterRule = append(asserterRule, asserterItem)
	}
	var challengerRule []interface{}
	for _, challengerItem := range challenger {
		challengerRule = append(challengerRule, challengerItem)
	}

	logs, sub, err := _Colosseum.contract.WatchLogs(opts, "ChallengeCreated", outputIndexRule, asserterRule, challengerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ColosseumChallengeCreated)
				if err := _Colosseum.contract.UnpackLog(event, "ChallengeCreated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseChallengeCreated is a log parse operation binding the contract event 0xd2f7931a802085b3d0234d4c320ce7ee0041da96678ce2bf5c93e8d3d7e65f52.
//
// Solidity: event ChallengeCreated(uint256 indexed outputIndex, address indexed asserter, address indexed challenger, uint256 timestamp)
func (_Colosseum *ColosseumFilterer) ParseChallengeCreated(log types.Log) (*ColosseumChallengeCreated, error) {
	event := new(ColosseumChallengeCreated)
	if err := _Colosseum.contract.UnpackLog(event, "ChallengeCreated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ColosseumDeletedIterator is returned from FilterDeleted and is used to iterate over the raw logs and unpacked data for Deleted events raised by the Colosseum contract.
type ColosseumDeletedIterator struct {
	Event *ColosseumDeleted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ColosseumDeletedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ColosseumDeleted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ColosseumDeleted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ColosseumDeletedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ColosseumDeletedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ColosseumDeleted represents a Deleted event raised by the Colosseum contract.
type ColosseumDeleted struct {
	OutputIndex *big.Int
	Timestamp   *big.Int
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterDeleted is a free log retrieval operation binding the contract event 0xe8f652f9f21a63a0e34171413bdc9d92cd79d0bb8bc66f3c92efedf25a3e32db.
//
// Solidity: event Deleted(uint256 indexed outputIndex, uint256 timestamp)
func (_Colosseum *ColosseumFilterer) FilterDeleted(opts *bind.FilterOpts, outputIndex []*big.Int) (*ColosseumDeletedIterator, error) {

	var outputIndexRule []interface{}
	for _, outputIndexItem := range outputIndex {
		outputIndexRule = append(outputIndexRule, outputIndexItem)
	}

	logs, sub, err := _Colosseum.contract.FilterLogs(opts, "Deleted", outputIndexRule)
	if err != nil {
		return nil, err
	}
	return &ColosseumDeletedIterator{contract: _Colosseum.contract, event: "Deleted", logs: logs, sub: sub}, nil
}

// WatchDeleted is a free log subscription operation binding the contract event 0xe8f652f9f21a63a0e34171413bdc9d92cd79d0bb8bc66f3c92efedf25a3e32db.
//
// Solidity: event Deleted(uint256 indexed outputIndex, uint256 timestamp)
func (_Colosseum *ColosseumFilterer) WatchDeleted(opts *bind.WatchOpts, sink chan<- *ColosseumDeleted, outputIndex []*big.Int) (event.Subscription, error) {

	var outputIndexRule []interface{}
	for _, outputIndexItem := range outputIndex {
		outputIndexRule = append(outputIndexRule, outputIndexItem)
	}

	logs, sub, err := _Colosseum.contract.WatchLogs(opts, "Deleted", outputIndexRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ColosseumDeleted)
				if err := _Colosseum.contract.UnpackLog(event, "Deleted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseDeleted is a log parse operation binding the contract event 0xe8f652f9f21a63a0e34171413bdc9d92cd79d0bb8bc66f3c92efedf25a3e32db.
//
// Solidity: event Deleted(uint256 indexed outputIndex, uint256 timestamp)
func (_Colosseum *ColosseumFilterer) ParseDeleted(log types.Log) (*ColosseumDeleted, error) {
	event := new(ColosseumDeleted)
	if err := _Colosseum.contract.UnpackLog(event, "Deleted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ColosseumInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the Colosseum contract.
type ColosseumInitializedIterator struct {
	Event *ColosseumInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ColosseumInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ColosseumInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ColosseumInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ColosseumInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ColosseumInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ColosseumInitialized represents a Initialized event raised by the Colosseum contract.
type ColosseumInitialized struct {
	Version uint8
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_Colosseum *ColosseumFilterer) FilterInitialized(opts *bind.FilterOpts) (*ColosseumInitializedIterator, error) {

	logs, sub, err := _Colosseum.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &ColosseumInitializedIterator{contract: _Colosseum.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_Colosseum *ColosseumFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *ColosseumInitialized) (event.Subscription, error) {

	logs, sub, err := _Colosseum.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ColosseumInitialized)
				if err := _Colosseum.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_Colosseum *ColosseumFilterer) ParseInitialized(log types.Log) (*ColosseumInitialized, error) {
	event := new(ColosseumInitialized)
	if err := _Colosseum.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ColosseumProvenIterator is returned from FilterProven and is used to iterate over the raw logs and unpacked data for Proven events raised by the Colosseum contract.
type ColosseumProvenIterator struct {
	Event *ColosseumProven // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ColosseumProvenIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ColosseumProven)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ColosseumProven)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ColosseumProvenIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ColosseumProvenIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ColosseumProven represents a Proven event raised by the Colosseum contract.
type ColosseumProven struct {
	OutputIndex   *big.Int
	NewOutputRoot [32]byte
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterProven is a free log retrieval operation binding the contract event 0xc2abee209438b2b732f3df51f48b7cc99f73c9965f06680549f28f36a2dc2447.
//
// Solidity: event Proven(uint256 indexed outputIndex, bytes32 newOutputRoot)
func (_Colosseum *ColosseumFilterer) FilterProven(opts *bind.FilterOpts, outputIndex []*big.Int) (*ColosseumProvenIterator, error) {

	var outputIndexRule []interface{}
	for _, outputIndexItem := range outputIndex {
		outputIndexRule = append(outputIndexRule, outputIndexItem)
	}

	logs, sub, err := _Colosseum.contract.FilterLogs(opts, "Proven", outputIndexRule)
	if err != nil {
		return nil, err
	}
	return &ColosseumProvenIterator{contract: _Colosseum.contract, event: "Proven", logs: logs, sub: sub}, nil
}

// WatchProven is a free log subscription operation binding the contract event 0xc2abee209438b2b732f3df51f48b7cc99f73c9965f06680549f28f36a2dc2447.
//
// Solidity: event Proven(uint256 indexed outputIndex, bytes32 newOutputRoot)
func (_Colosseum *ColosseumFilterer) WatchProven(opts *bind.WatchOpts, sink chan<- *ColosseumProven, outputIndex []*big.Int) (event.Subscription, error) {

	var outputIndexRule []interface{}
	for _, outputIndexItem := range outputIndex {
		outputIndexRule = append(outputIndexRule, outputIndexItem)
	}

	logs, sub, err := _Colosseum.contract.WatchLogs(opts, "Proven", outputIndexRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ColosseumProven)
				if err := _Colosseum.contract.UnpackLog(event, "Proven", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseProven is a log parse operation binding the contract event 0xc2abee209438b2b732f3df51f48b7cc99f73c9965f06680549f28f36a2dc2447.
//
// Solidity: event Proven(uint256 indexed outputIndex, bytes32 newOutputRoot)
func (_Colosseum *ColosseumFilterer) ParseProven(log types.Log) (*ColosseumProven, error) {
	event := new(ColosseumProven)
	if err := _Colosseum.contract.UnpackLog(event, "Proven", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
