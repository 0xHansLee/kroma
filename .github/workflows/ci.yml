name: ci

on:
  push:
    branches:
    - dev
    tags:
      - '*.*.*'

jobs:
  prepare:
    name: Run CI
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}

    outputs:
      kanvas-node: ${{ steps.packages.outputs.kanvas-node }}
      kanvas-validator: ${{ steps.packages.outputs.kanvas-validator }}
      kanvas-batcher: ${{ steps.packages.outputs.kanvas-batcher }}
      kanvas-stateviz: ${{ steps.packages.outputs.kanvas-stateviz }}
      docker-tag: ${{ steps.docker-image-name.outputs.docker-tag }}

    steps:
      - name: Check out source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
          token: ${{ secrets.KANVAS_GITHUB_TOKEN }}

      - name: Setup Go 1.19
        uses: actions/setup-go@v4
        with:
          go-version: '1.19'
      - run: go mod download

      - name: Setup Node.js 16.x
        uses: actions/setup-node@master
        with:
          node-version: 16.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Yarn Cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn --frozen-lockfile

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Build
        run: yarn build

      - name: Run Tests
        env:
          E2E_DISABLE_PARALLEL: true
        run: make test

      - name: Docker Image Name
        id: docker-image-name
        run: |
          if [[ $GITHUB_REF_TYPE == 'branch' ]];
          then
            echo ::set-output name=docker-tag::dev
          else
            echo ::set-output name=docker-tag::${GITHUB_REF#refs/tags/}
          fi

  kanvas-node:
    name: Kanvas Node Version ${{ needs.prepare.outputs.docker-tag }}
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
          token: ${{ secrets.KANVAS_GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_SECRET }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Publish kanvas Node
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm64,linux/amd64
          target: kanvas-node
          push: true
          tags: wemixkanvas/node:${{ needs.prepare.outputs.docker-tag }}

  kanvas-validator:
    name: Kanvas Validator Version ${{ needs.prepare.outputs.docker-tag }}
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
          token: ${{ secrets.KANVAS_GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_SECRET }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Publish kanvas Node
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm64,linux/amd64
          target: kanvas-validator
          push: true
          tags: wemixkanvas/validator:${{ needs.prepare.outputs.docker-tag }}

  kanvas-batcher:
    name: Kanvas Batcher Version ${{ needs.prepare.outputs.docker-tag }}
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
          token: ${{ secrets.KANVAS_GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_SECRET }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Publish kanvas Node
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm64,linux/amd64
          target: kanvas-batcher
          push: true
          tags: wemixkanvas/batcher:${{ needs.prepare.outputs.docker-tag }}


